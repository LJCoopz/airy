apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  annotations:
    kubernetes.io/ingress.class: traefik
  creationTimestamp: null
  name: airy-core-ui
spec:
  entryPoints: []
  routes:
  - kind: Rule
    match: Host(`{{ .Values.global.kubernetes.host }}`) && PathPrefix(`/ui`)
    middlewares:
    - name: airy-core-ui
    priority: 0
    services:
    - kind: Service
      name: "frontend-ui"
      port: 80
  - kind: Rule
    match: Host(`{{ .Values.global.kubernetes.host }}`) && PathPrefix(`/chatplugin/ui`)
    middlewares:
    - name: airy-core-chatplugin-ui
    priority: 0
    services:
    - kind: Service
      name: "frontend-chat-plugin"
      port: 80
  tls:
    certResolver: myresolver
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  creationTimestamp: null
  name: airy-core-chatplugin-ui
spec:
  stripPrefix:
    prefixes:
    - /chatplugin/ui
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  creationTimestamp: null
  name: airy-core-ui
spec:
  stripPrefix:
    prefixes:
    - /ui
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  annotations:
    kubernetes.io/ingress.class: traefik
  creationTimestamp: null
  name: airy-core-redirect
spec:
  entryPoints: []
  routes:
  - kind: Rule
    match: Host(`{{ .Values.global.kubernetes.host }}`) && Path(`/`)
    middlewares: []
    priority: 0
    services:
    - kind: Service
      name: "frontend-ui"
      port: 80
  tls:
    certResolver: myresolver
